{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dev-adf-47"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_extract_from_sqldb_6_incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Incremental load using watermark table.\nAgain job name was hardcoded because at the moment of creation there is no parent orchestrator pipeline.",
				"activities": [
					{
						"name": "extract_from_sqldb",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_task_parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat(activity('get_task_parameters').output.firstRow.src_sql, ' WHERE ModifiedDate > ''',activity('get_last_run_date').output.firstRow.last_run_date, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_adls_text_file",
								"type": "DatasetReference",
								"parameters": {
									"p_foldername": {
										"value": "@activity('get_task_parameters').output.firstRow.tgt_folder",
										"type": "Expression"
									},
									"p_filename": {
										"value": "@activity('get_task_parameters').output.firstRow.tgt_filename",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "get_task_parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "get_last_run_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[control].[sp_task_parameters]",
								"storedProcedureParameters": {
									"job": {
										"type": "String",
										"value": "load_customer"
									},
									"job_id": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"task": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"task_id": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"task_sequence": {
										"type": "Int32",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "log_start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": "load_customer",
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": "Started running: PL_extract_from_sqldb",
									"type": "String"
								},
								"task": {
									"value": "PL_extract_from_sqldb",
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": "1",
									"type": "Int32"
								},
								"task_status": {
									"value": "Running",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_last_run_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": "load_customer",
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": "Succeeded running: PL_extract_from_sqldb",
									"type": "String"
								},
								"task": {
									"value": "PL_extract_from_sqldb",
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": "1",
									"type": "Int32"
								},
								"task_status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_control_table_failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": "load_customer",
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": "Failed running: PL_extract_from_sqldb",
									"type": "String"
								},
								"task": {
									"value": "PL_extract_from_sqldb",
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": "1",
									"type": "Int32"
								},
								"task_status": {
									"value": "Failure",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "log_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "extract_from_sqldb",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "extract_from_sqldb",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "FAILURE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_last_run_date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "update_control_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[control].[sp_get_last_run_date]",
								"storedProcedureParameters": {
									"job": {
										"type": "String",
										"value": "load_customer"
									},
									"task": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "update_last_run_date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_control_table_success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_last_run_date]",
							"storedProcedureParameters": {
								"job": {
									"value": "load_customer",
									"type": "String"
								},
								"last_run_date": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "_FRAMEWORK/Buildup"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_extract_from_sqldb_mySPexample')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "extract_from_sqldb",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "lookup_transformed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM SalesLT.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_adls_text_file",
								"type": "DatasetReference",
								"parameters": {
									"p_foldername": "customer",
									"p_filename": "customer.csv"
								}
							}
						]
					},
					{
						"name": "lookup_transformed",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[config].[get_task_properties]",
								"storedProcedureParameters": {
									"active_only": {
										"type": "String",
										"value": "Y"
									},
									"job": {
										"type": "String",
										"value": "load_customer"
									},
									"task": {
										"type": "String",
										"value": "PL_extract_from_sqldb"
									},
									"task_sequence": {
										"type": "Int32",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "_FRAMEWORK/PLAYGROUND"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_load_into_stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_task_parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "update_control_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[control].[sp_task_parameters]",
								"storedProcedureParameters": {
									"job": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.p_job",
											"type": "Expression"
										}
									},
									"job_id": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.p_job_id",
											"type": "Expression"
										}
									},
									"task": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"task_id": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"task_sequence": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.p_task_sequence",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "log_start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": {
										"value": "@concat('Started running: ', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": {
										"value": "@pipeline().parameters.p_task_sequence",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"task_status": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_control_table_success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": {
										"value": "@concat('Succeeded running: ', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": {
										"value": "@pipeline().parameters.p_task_sequence",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"task_status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_control_table_failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": {
										"value": "@concat('Failed running: ', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": {
										"value": "@pipeline().parameters.p_task_sequence",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"task_status": {
									"value": "ERROR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "log_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "load_staging_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "load_staging_table",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "ERROR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "load_staging_table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "get_task_parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[sp_load_stg]",
							"storedProcedureParameters": {
								"filepath": {
									"value": {
										"value": "@activity('get_task_parameters').output.firstRow.src_path",
										"type": "Expression"
									},
									"type": "String"
								},
								"stgtablename": {
									"value": {
										"value": "@activity('get_task_parameters').output.firstRow.tgt_stg_table",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_job": {
						"type": "string"
					},
					"p_job_id": {
						"type": "string"
					},
					"p_task_sequence": {
						"type": "string"
					}
				},
				"folder": {
					"name": "_FRAMEWORK"
				},
				"annotations": [
					"@pipeline().parameters.p_job"
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_load_into_tgt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_task_parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "update_control_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[control].[sp_task_parameters]",
								"storedProcedureParameters": {
									"job": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.p_job",
											"type": "Expression"
										}
									},
									"job_id": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.p_job_id",
											"type": "Expression"
										}
									},
									"task": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									},
									"task_id": {
										"type": "String",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"task_sequence": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.p_task_sequence",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "log_start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": {
										"value": "@concat('Started running: ', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": {
										"value": "@pipeline().parameters.p_task_sequence",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"task_status": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_control_table_success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": {
										"value": "@concat('Succeeded running: ', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": {
										"value": "@pipeline().parameters.p_task_sequence",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"task_status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "update_control_table_failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_task_log]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_status": {
									"value": null,
									"type": "String"
								},
								"status_description": {
									"value": {
										"value": "@concat('Failed running: ', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_sequence": {
									"value": {
										"value": "@pipeline().parameters.p_task_sequence",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"task_status": {
									"value": "ERROR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "log_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "RUNNING",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "load_target_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "SUCCESS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "update_control_table_failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "load_target_table",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_update_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@pipeline().parameters.p_job_id",
										"type": "Expression"
									},
									"type": "String"
								},
								"task": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"task_status": {
									"value": "ERROR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "load_target_table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "get_task_parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@activity('get_task_parameters').output.firstRow.sp_name",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_job": {
						"type": "string"
					},
					"p_job_id": {
						"type": "string"
					},
					"p_task_sequence": {
						"type": "string"
					}
				},
				"folder": {
					"name": "_FRAMEWORK"
				},
				"annotations": [
					"@pipeline().parameters.p_job"
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_test_copy_to_staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_without_mapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DROP TABLE IF EXISTS SalesLT.Customer_Stg2",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_adls_text_file",
								"type": "DatasetReference",
								"parameters": {
									"p_foldername": "customer",
									"p_filename": "customer.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_par_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"p_schema": "SalesLT",
									"p_table": "Customer_Stg2"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "_FRAMEWORK/PLAYGROUND"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_job_runner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "set_job_id",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_job_id",
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "initialize_tasks",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "set_job_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_init_job_control]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@variables('v_job_id')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_env_parameters",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "initialize_tasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM\n(\n\tSELECT parameter, value\n\tFROM config.environment\n) AS base\nPIVOT\n(\n\tMAX(value) FOR parameter IN (subscription, rg, adf)\n) AS pivoted",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "get_tasks",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "get_env_parameters",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[control].[sp_get_tasks]",
								"storedProcedureParameters": {
									"job": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.p_job",
											"type": "Expression"
										}
									},
									"job_id": {
										"type": "String",
										"value": {
											"value": "@variables('v_job_id')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azure_sqldb",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "for_each_task",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_tasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_tasks').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "set_task_log",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_task_log",
										"value": {
											"value": "@concat('Starting task ', item().task)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "log_task_start",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "set_task_log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[control].[sp_job_task_log]",
										"storedProcedureParameters": {
											"job": {
												"value": {
													"value": "@pipeline().parameters.p_job",
													"type": "Expression"
												},
												"type": "String"
											},
											"job_id": {
												"value": {
													"value": "@variables('v_job_id')",
													"type": "Expression"
												},
												"type": "String"
											},
											"job_status": {
												"value": "RUNNING",
												"type": "String"
											},
											"status_description": {
												"value": {
													"value": "@variables('v_task_log')",
													"type": "Expression"
												},
												"type": "String"
											},
											"task": {
												"value": {
													"value": "@item().task",
													"type": "Expression"
												},
												"type": "String"
											},
											"task_id": {
												"value": "0",
												"type": "String"
											},
											"task_sequence": {
												"value": {
													"value": "@item().task_sequence",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"task_status": {
												"value": "SCHEDULED",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ln_sqldb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "check_prior_task_status",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "log_task_start",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[control].[sp_task_status]",
										"storedProcedureParameters": {
											"task_status": {
												"value": {
													"value": "@variables('v_task_status')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ln_sqldb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "run_task",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "check_prior_task_status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": {
											"value": "@concat(\n    'https://management.azure.com/subscriptions/',\n    activity('get_env_parameters').output.firstRow.subscription,\n    '/resourceGroups/', \n    activity('get_env_parameters').output.firstRow.rg,\n    '/providers/Microsoft.DataFactory/factories/',\n    activity('get_env_parameters').output.firstRow.adf, \n    '/pipelines/', item().task, \n    '/createRun?api-version=2018-06-01'\n )",
											"type": "Expression"
										},
										"body": {
											"value": "@concat(\n    '{\"p_job\" : \"', item().job,\n    '\", \"p_job_id\" : \"', variables('v_job_id'),\n    '\", \"p_task_sequence\" : \"', item().task_sequence, '\"}'\n)",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "set_run_id",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "run_task",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_run_id",
										"value": {
											"value": "@activity('run_task').output.runId",
											"type": "Expression"
										}
									}
								},
								{
									"name": "check_task_status",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "set_run_id",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_check_task_status",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"p_run_id": {
												"value": "@variables('v_run_id')",
												"type": "Expression"
											},
											"p_job": {
												"value": "@pipeline().parameters.p_job",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "task_successful",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "check_task_status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_task_status",
										"value": "SUCCESS"
									}
								},
								{
									"name": "task_failed",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "check_task_status",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_task_status",
										"value": "ERROR"
									}
								}
							]
						}
					},
					{
						"name": "job_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "for_each_task",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[control].[sp_job_status_error]",
							"storedProcedureParameters": {
								"job": {
									"value": {
										"value": "@pipeline().parameters.p_job",
										"type": "Expression"
									},
									"type": "String"
								},
								"job_id": {
									"value": {
										"value": "@variables('v_job_id')",
										"type": "Expression"
									},
									"type": "String"
								},
								"status": {
									"value": {
										"value": "@variables('v_task_status')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ln_sqldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_job": {
						"type": "string"
					}
				},
				"variables": {
					"v_job_id": {
						"type": "String"
					},
					"v_task_log": {
						"type": "String"
					},
					"v_task_status": {
						"type": "String"
					},
					"v_run_id": {
						"type": "String"
					}
				},
				"folder": {
					"name": "_FRAMEWORK"
				},
				"annotations": [
					"@pipeline().parameters.p_job"
				]
			},
			"dependsOn": []
		}
	]
}